<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" import="java.util.*" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<c:set var="path" value="${pageContext.request.contextPath }"/>
<fmt:requestEncoding value="utf-8"/>
<!DOCTYPE html>
<html>
<head>
    <title>ToDo List</title>
    <link href="${path}/a00_com/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="${path}/a00_com/css/sb-admin-2.min.css" rel="stylesheet">
    <link href="${path}/a00_com/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="${path}/a00_com/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <style>
        .todo-item {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 5px;
            display: flex;
            justify-content: space-between;
        }
        .todo-item input[type="checkbox"] {
            margin-right: 10px;
        }
        .todo-controls {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div id="wrapper">
        <%@ include file="a02_sliderBar.jsp" %>
        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <%@ include file="a03_topBar.jsp" %>
                <div class="container-fluid">
                    <div class="todo-controls">
                        <button class="btn btn-primary" data-toggle="modal" data-target="#assignmentModal">업무 추가</button>
                    </div>
                    <div id="todoList">
                        <c:forEach var="assignment" items="${assignments}">
                            <div class="todo-item" data-assignmentid="${assignment.assignmentId}">
                                <input type="checkbox" onchange="toggleAssignmentComplete(${assignment.assignmentId})" 
                                    <c:if test="${assignment.completeDate != null}">checked</c:if>>
                                <span>${assignment.taskname}</span>
                                <button onclick="deleteAssignment(${assignment.assignmentId})">삭제</button>
                            </div>
                        </c:forEach>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 모달 창 -->
    <div class="modal fade" id="assignmentModal" tabindex="-1" role="dialog" aria-labelledby="assignmentModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignmentModalLabel">업무 배정</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="taskName">업무 이름</label>
                        <input type="text" id="taskName" class="form-control" placeholder="업무 이름을 입력하세요">
                    </div>
                    <div class="form-group">
                        <label for="empnoSelect">담당자</label>
                        <select id="empnoSelect" class="form-control">
                            <c:forEach var="member" items="${teamMembers}">
                                <option value="${member.empno}">${member.name}</option>
                            </c:forEach>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="assigndate">시작 날짜</label>
                        <input type="date" id="assigndate" class="form-control">
                    </div>
                    <div class="form-group">
                        <label for="completedate">끝나는 날짜</label>
                        <input type="date" id="completedate" class="form-control">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">닫기</button>
                    <button type="button" class="btn btn-primary" onclick="saveAssignment(${projectId})">저장</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function saveAssignment(projectId) {
            var taskName = $('#taskName').val();
            var empno = $('#empnoSelect').val();
            var assigndate = $('#assigndate').val();
            var completedate = $('#completedate').val();
            

            if (taskName.trim() === "" || !empno || !assigndate || !completedate) {
                alert('모든 필드를 채워주세요');
                return;
            }

            $.ajax({
                url: '${path}/projects/' + projectId + '/assignments',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({ taskName: taskName, empno: empno, assigndate: assigndate, completedate: completed
ate }),
                success: function(response) {
                    // 새로운 할 일을 할 일 목록에 추가
                    var todoList = $('#todoList');
                    var newAssignment = '<div class="todo-item" data-assignmentid="' + response.assignmentId + '">' +
                                        '<input type="checkbox" onchange="toggleAssignmentComplete(' + response.assignmentId + ', ' + projectId + ')">' +
                                        '<span>' + taskName + '</span>' +
                                        '<button onclick="deleteAssignment(' + response.assignmentId + ', ' + projectId + ')">삭제</button>' +
                                        '</div>';
                    todoList.append(newAssignment);

                    $('#assignmentModal').modal('hide'); // 모달 닫기
                },
                error: function(xhr, status, error) {
                    console.error('Error: ', error);
                }
            });
        }

        function deleteAssignment(assignmentId, projectId) {
            $.ajax({
                url: '${path}/projects/' + projectId + '/assignments/' + assignmentId,
                type: "DELETE",
                success: function(response) {
                    location.reload();
                },
                error: function(xhr, status, error) {
                    console.error('Error: ', error);
                }
            });
        }

        function toggleAssignmentComplete(assignmentId, projectId) {
            var isComplete = $('div[data-assignmentid="' + assignmentId + '"] input[type="checkbox"]').is(":checked");
            var completeDate = isComplete ? new Date().toISOString().split('T')[0] : null;

            $.ajax({
                url: '${path}/projects/' + projectId + '/assignments/' + assignmentId,
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify({ completeDate: completeDate }),
                success: function(response) {
                    console.log("Assignment updated: ", response);
                },
                error: function(xhr, status, error) {
                    console.error('Error: ', error);
                }
            });
        }
    </script>
</body>
</html>
